worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;

    log_format json_logstash '{"date":"$time_iso8601",'
        '"severity":"INFO",'
        '"remote_ip":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"request_method":"$request_method",'
        '"request_time":"$request_time",'
        '"request_length":"$request_length",'
        '"status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"referrer":"$http_referer",'
        '"agent":"$http_user_agent"}';
    access_log /var/log/nginx/access.log json_logstash;

    sendfile             on;
    keepalive_timeout    65;
    client_max_body_size 5M;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Block alihack
    deny 23.27.103.106/32;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        if ($http_x_forwarded_proto = 'http') {
            return 301 https://$host$request_uri;
        }
        # ensure https; see https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        if ($request_method = 'OPTIONS') {
          return 200;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        root /var/www/html;

        index index.html;

        location / {
            etag on;
            expires 30m;
            gzip_static on;
            # ensure https; see https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            try_files $uri /index.html;
            break;
        }


        location ~* \.(eot|otf|ttf|woff|woff2)$ {
            # ensure https; see https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header Access-Control-Allow-Origin *;
        }

        location /health-check {
          return 200;
          access_log off;
        }
    }

}
